name: mlem-mlem-deploy

on:
  push:
    branches:
      - 'master'

jobs:
  open-issue:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Set up node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Set up cache
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint code
        run: yarn lint

      - name: Build
        run: yarn build

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Prepare deployment
        run: |
          cp -r scripts dist &&
          cp appspec.yml \
             package.json \
             yarn.lock dist

      - name: Deploy push bundle
        run: |
          aws deploy push
          --application-name mlem-mlem-app
          --description "mlem-mlem backend revision"
          --ignore-hidden-files
          --s3-location s3://mlem-mlem-revision/mlem-backend.zip
          --source ./dist

      - name: Create deployment
        if: github.event_name == 'push'
        run: |
          aws deploy create-deployment
          --application-name mlem-mlem-app
          --deployment-config-name CodeDeployDefault.OneAtATime
          --deployment-group-name mlem-mlem-group
          --file-exists-behavior OVERWRITE
          --s3-location bucket=mlem-mlem-revision,key=mlem-backend.zip,bundleType=zip
